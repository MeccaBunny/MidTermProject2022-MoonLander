/***************************************************************************************
* Moon Surface
* 
* Random height on every 1000*1000 coordinate is not an ideal way to create the surface
* of the moon. Because real surface of the moon is not just random pointed mountains
* but series of hills which has smooth continuous slopes. This article is about how to
* embody more realistic moon surface.
* 
* Place a 10~20 dots with height on 1000*1000 coordinate. Find the function of the slopes
* using 3 points. For each surface, get the mean of the result of the function and apply
* it as a height.
***************************************************************************************/


//int getSurface(double gx, double gy, int psize, double h);

//
//typedef struct Msg {
//	char data[100];
//	struct Msg* next;
//} Msg;
//
//typedef struct MsgBox {
//	int x;
//	int y;
//	int width;
//	int height;
//	Msg *msg;
//} MsgBox;
//
//void gotoxy(int x, int y);
//
//void BoxManager_init(MsgBox* box);
//void BoxManager_stack(MsgBox* box, char* msg);
//void BoxManager_end(MsgBox* box);
//
//void Box_show();
//void BoxManager_mainloop();
//void Box_stackMsg(MsgBox* box, char* s);
//void Box_clearMsg(MsgBox* box);



///**************************************************************
//* testing codes
//* 
//**************************************************************/
//#include<stdio.h>
//#include<stdlib.h>
//#include<time.h>
//#include<windows.h>
//#include<math.h>
//
//#include"physic.h"
//#include "moon.h"
//#include "moonlander.h"
//#include "ex.h"
//#include "VisualTool.h"
//#include"test.h"
//
//void fallingTest() //testing acceleration of phsic module.
//{
//	system("color 1f");
//	srand((unsigned int)time(NULL)); t = clock(); double starting_time = t;
//	MoonLander_SpaceshipInit();
//	MoonLander_coordinate.DDZ = -10;
//
//	int i = 0;
//	while (1)
//	{
//		if (i > 3000) break;
//		dt = (double)clock() - t; t = clock(); MoonLander_phsics(dt);
//		printf("%d  \t  runtime: %lf(s)  \t  rocket's z coordinate: %f(m)  \n", i, (double)(clock() - starting_time) / 1000, MoonLander_coordinate.Z);
//		Sleep(1);
//		i++;
//	}
//}
//
//void screenTestV1()
//{
//	int x = 5;
//	int y = 5;
//	int dx = 1;
//	int dy = 1;
//	while (1)
//	{
//		screen_setdata(x, y, 0);
//		if (x < 2)
//		{
//			dx = 1;
//		}
//		if (75 < x)
//		{
//			dx = -1;
//		}
//		if (y < 2)
//		{
//			dy = 1;
//		}
//		if (15 < y)
//		{
//			dy = -1;
//		}
//
//		x += dx;
//		y += dy;
//		screen_setdata(x, y, 0.95);
//
//		setscreen();
//		prtScreen();
//
//		textcolor(7);
//		gotoxy(1, 5);
//		printf("x:%02d", x);
//		gotoxy(1, 7);
//		gotoxy(1, 7);
//		printf("y:%02d", y);
//		gotoxy(1, 9);
//		printf("z:");
//		gotoxy(1, 11);
//		printf("roll:");
//		gotoxy(1, 13);
//		printf("yaw:");
//		gotoxy(1, 15);
//		printf("pitch:");
//		textcolor(14);
//
//		Sleep(10);
//	}
//	end();
//
//}
//
//void screenTestV2()
//{
//	int* ex;
//	int* ey;
//	double* ez;
//
//	int psize = randint(50, 200);
//	ex = malloc(sizeof(int) * 100);
//	ey = malloc(sizeof(int) * 100);
//
//	for (int i = 0; i < 100; i++)
//	{
//		ex[i] = randint(5, 995);
//		ey[i] = randint(5, 995);
//	}
//
//	double t = clock();
//	double dt = 0;
//	double starting_time = t;
//
//	double x = 553;
//	double y = 234;
//	double h = 0;
//	double dx = 1;
//	double dy = 1;
//
//
//
//	MoonLander_SpaceshipInit();
//
//	MoonLander_coordinate.DDZ = -10 / 6;
//
//	gotoxy(1, 20);
//	char* msg = getPilotMSG();
//	printf("%s", msg);
//	double msgt = 0;
//	double mvt = 0;
//
//	while (1)
//	{
//		dt = (double)clock() - t;
//		t = clock();
//		MoonLander_phsics(dt);
//
//		if (x < 100)
//		{
//			dx = 1;
//		}
//		if (900 < x)
//		{
//			dx = -1;
//		}
//		if (y < 100)
//		{
//			dy = 1;
//		}
//		if (900 < y)
//		{
//			dy = -1;
//		}
//		mvt += dt;
//		if (mvt > 30)
//		{
//			x += dx * mvt * 0.01;
//			y += dy * mvt * 0.01;
//			mvt = 0;
//		}
//
//		//getSurface(x, y, psize);
//
//		prtScreen();
//		setscreen();
//
//		textcolor(7);
//		gotoxy(1, 5);
//		printf("x:%03lf", x);
//		gotoxy(1, 7);
//		gotoxy(1, 7);
//		printf("y:%03lf", y);
//		gotoxy(1, 9);
//		printf("z:%03lf", MoonLander_coordinate.Z);
//		gotoxy(1, 11);
//		printf("roll:%03lf", MoonLander_coordinate.Roll);
//		gotoxy(1, 13);
//		printf("yaw:%03lf", MoonLander_coordinate.Yaw);
//		gotoxy(1, 15);
//		printf("pitch:%03lf", MoonLander_coordinate.Pitch);
//
//		msgt += dt;
//		if (msgt > 5000)
//		{
//			gotoxy(1, 20);
//			char* msg = getPilotMSG();
//			printf("%s", msg);
//			msgt = 0;
//		}
//
//		textcolor(14);
//
//		Sleep(1);
//	}
//
//	end();
//}